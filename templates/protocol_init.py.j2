{% for import_from, imported in domains %}
from cripy.{{ which }}.protocol.{{ import_from }} import {{ imported }}
{% endfor %}

__all__ = [ "ProtocolMixin" ]


class ProtocolMixin(object):
    def __init__(self, *args, **kwargs):
        {% if which == 'gevent' %}
        super(ProtocolMixin, self).__init__(*args, **kwargs)
        {% else %}
        super().__init__(*args, **kwargs)
        {% endif %}
        self.protocol_events = dict()
        {% for _, imported in domains %}
        self.{{ imported }}: {{ imported }} = {{ imported }}(self)
        self._update_protocol_events(self.{{ imported }}.get_event_classes())
        {% endfor %}

    def _update_protocol_events(self, events):
        if events is not None:
            self.protocol_events.update(events)

